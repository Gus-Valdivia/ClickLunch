-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS clicklunch."Alimento"
(
    id serial NOT NULL,
    nombre character varying COLLATE pg_catalog."default",
    descripcion character varying COLLATE pg_catalog."default",
    tiempo_preparacion integer DEFAULT 0,
    costo integer DEFAULT 0,
    disponibilidad integer DEFAULT 1,
    isactive boolean DEFAULT true,
    id_cafeteria integer,
    id_puntuacion integer,
    url character varying COLLATE pg_catalog."default",
    CONSTRAINT "Alimento_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS clicklunch."Cafeteria"
(
    id serial NOT NULL,
    nombre character varying COLLATE pg_catalog."default",
    isactive boolean DEFAULT true,
    CONSTRAINT "Cafeteria_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS clicklunch."Encabezado"
(
    id serial NOT NULL,
    fecha_pedido date,
    hora time without time zone,
    CONSTRAINT "Encabezado_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS clicklunch."EstadoPedido"
(
    id serial NOT NULL,
    estado character varying COLLATE pg_catalog."default",
    CONSTRAINT "EstadoPedido_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS clicklunch."Pedido"
(
    id serial NOT NULL,
    id_usuario integer,
    id_encabezado integer,
    costo_total integer,
    id_cafeteria integer,
    id_estado integer DEFAULT 1,
    CONSTRAINT "Pedido_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS clicklunch."Puntuacion"
(
    id serial NOT NULL,
    comentario character varying COLLATE pg_catalog."default",
    puntuacion integer,
    isactive boolean DEFAULT true,
    CONSTRAINT "Puntuacion_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS clicklunch."Rol"
(
    id serial NOT NULL,
    rol character varying COLLATE pg_catalog."default",
    CONSTRAINT "Rol_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS clicklunch."Token"
(
    id serial NOT NULL,
    token character varying COLLATE pg_catalog."default",
    CONSTRAINT "Token_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS clicklunch."Usuario"
(
    id serial NOT NULL,
    nombre character varying COLLATE pg_catalog."default",
    email character varying COLLATE pg_catalog."default",
    saldo integer DEFAULT 0,
    isactive boolean DEFAULT false,
    id_token integer,
    id_rol integer DEFAULT 0,
    verify character varying COLLATE pg_catalog."default" DEFAULT 154897,
    CONSTRAINT "Usuario_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS clicklunch.pedido_alimento
(
    id_alimento integer,
    id_pedido integer
);

ALTER TABLE IF EXISTS clicklunch."Alimento"
    ADD CONSTRAINT fk_alimento_cafeteria FOREIGN KEY (id_cafeteria)
    REFERENCES clicklunch."Cafeteria" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS clicklunch."Alimento"
    ADD CONSTRAINT fk_alimento_puntuacion FOREIGN KEY (id_puntuacion)
    REFERENCES clicklunch."Puntuacion" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS clicklunch."Pedido"
    ADD CONSTRAINT fk_pedido_cafeteria FOREIGN KEY (id_cafeteria)
    REFERENCES clicklunch."Cafeteria" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS clicklunch."Pedido"
    ADD CONSTRAINT fk_pedido_encabezado FOREIGN KEY (id_encabezado)
    REFERENCES clicklunch."Encabezado" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS clicklunch."Pedido"
    ADD CONSTRAINT fk_pedido_estado FOREIGN KEY (id_estado)
    REFERENCES clicklunch."EstadoPedido" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS clicklunch."Pedido"
    ADD CONSTRAINT fk_pedido_usuario FOREIGN KEY (id_usuario)
    REFERENCES clicklunch."Usuario" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS clicklunch."Usuario"
    ADD CONSTRAINT fk_usaurio_rol FOREIGN KEY (id_rol)
    REFERENCES clicklunch."Rol" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS clicklunch."Usuario"
    ADD CONSTRAINT fk_usuario_token FOREIGN KEY (id_token)
    REFERENCES clicklunch."Token" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;